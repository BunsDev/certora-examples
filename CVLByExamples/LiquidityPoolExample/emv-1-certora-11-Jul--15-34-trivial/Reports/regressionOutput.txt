Environment variable 'jobId' is empty; using jobId 0d17897ef45d4044af0a95d66179df65
Stream for topic CVT had an exception and will not be available
AWS credentials could not be loaded
Stream for topic Fuzzer had an exception and will not be available
AWS credentials could not be loaded
Stream for topic Rule had an exception and will not be available
AWS credentials could not be loaded
Memory splitting of Asset-balanceOf(address) succeeded
Memory splitting of Asset-transfer(address,uint256) succeeded
Memory splitting of Asset-approve(address,uint256) succeeded
Memory splitting of Asset-totalSupply() succeeded
Memory splitting of TrivialReceiver-executeOperation(uint256,uint256,address) succeeded
Memory splitting of Asset-allowance(address,address) succeeded
Memory splitting of Asset-transferFrom(address,address,uint256) succeeded
Memory splitting of Pool-approve(address,uint256) succeeded
Memory splitting of Pool-balanceOf(address) succeeded
Memory splitting of Pool-sharesToAmount(uint256) succeeded
Memory splitting of Pool-amountToShares(uint256) succeeded
Memory splitting of Pool-transfer(address,uint256) succeeded
Memory splitting of Pool-deposit(uint256) succeeded
Memory splitting of Pool-flashLoan(address,uint256) succeeded
Memory splitting of Pool-allowance(address,address) succeeded
Memory splitting of Pool-calcPremium(uint256) succeeded
Memory splitting of Pool-asset() succeeded
Memory splitting of Pool-withdraw(uint256) succeeded
Memory splitting of Pool-feeRate() succeeded
Memory splitting of Pool-assetBalance() succeeded
Memory splitting of Pool-totalSupply() succeeded
Memory splitting of Pool-transferFrom(address,address,uint256) succeeded
Found multiple (or zero) initial writes: []
Found multiple (or zero) initial writes: []
Found multiple (or zero) initial writes: []
Found multiple (or zero) initial writes: []
Found multiple (or zero) initial writes: []
Found multiple (or zero) initial writes: []
Created a meta slot tacS!ce4604a0000000000000000000000007!StructAccess_offset0_base.MapAccess_base.Root_slot1
Created a meta slot tacS!ce4604a0000000000000000000000007!StructAccess_offset0_base.MapAccess_base.StructAccess_offset0_base.MapAccess_base.Root_slot2
Created a meta slot tacS!ce4604a0000000000000000000000007!StructAccess_offset0_base.MapAccess_base.StructAccess_offset0_base.MapAccess_base.Root_slot2
Created a meta slot tacS!ce4604a0000000000000000000000007!StructAccess_offset0_base.MapAccess_base.Root_slot1
Created a meta slot tacS!ce4604a0000000000000000000000007!0
Created a meta slot tacS!ce4604a0000000000000000000000007!StructAccess_offset0_base.MapAccess_base.StructAccess_offset0_base.MapAccess_base.Root_slot2
Created a meta slot tacS!ce4604a0000000000000000000000007!StructAccess_offset0_base.MapAccess_base.Root_slot1

Created a meta slot tacS!ce4604a0000000000000000000000011!StructAccess_offset0_base.MapAccess_base.Root_slot1
Created a meta slot tacS!ce4604a0000000000000000000000011!StructAccess_offset0_base.MapAccess_base.StructAccess_offset0_base.MapAccess_base.Root_slot2
Created a meta slot tacS!ce4604a0000000000000000000000011!StructAccess_offset0_base.MapAccess_base.StructAccess_offset0_base.MapAccess_base.Root_slot2
Created a meta slot tacS!ce4604a0000000000000000000000011!StructAccess_offset0_base.MapAccess_base.Root_slot1
Created a meta slot tacS!ce4604a0000000000000000000000011!0
Created a meta slot tacS!ce4604a0000000000000000000000011!4!0
Created a meta slot tacS!ce4604a0000000000000000000000011!5
Created a meta slot tacS!ce4604a0000000000000000000000011!4!0
Created a meta slot tacS!ce4604a0000000000000000000000011!3
Created a meta slot tacS!ce4604a0000000000000000000000011!4!0
Created a meta slot tacS!ce4604a0000000000000000000000011!0
Created a meta slot tacS!ce4604a0000000000000000000000011!StructAccess_offset0_base.MapAccess_base.Root_slot1
Created a meta slot tacS!ce4604a0000000000000000000000011!5
Created a meta slot tacS!ce4604a0000000000000000000000011!0
Created a meta slot tacS!ce4604a0000000000000000000000011!4!0
Created a meta slot tacS!ce4604a0000000000000000000000011!3
Created a meta slot tacS!ce4604a0000000000000000000000011!4!0
Created a meta slot tacS!ce4604a0000000000000000000000011!0
Created a meta slot tacS!ce4604a0000000000000000000000011!StructAccess_offset0_base.MapAccess_base.Root_slot1
Created a meta slot tacS!ce4604a0000000000000000000000011!0
Created a meta slot tacS!ce4604a0000000000000000000000011!4!0
Created a meta slot tacS!ce4604a0000000000000000000000011!StructAccess_offset0_base.MapAccess_base.StructAccess_offset0_base.MapAccess_base.Root_slot2
Created a meta slot tacS!ce4604a0000000000000000000000011!StructAccess_offset0_base.MapAccess_base.Root_slot1
Created a meta slot tacS!ce4604a0000000000000000000000011!3
Created a meta slot tacS!ce4604a0000000000000000000000011!5
Created a meta slot tacS!ce4604a0000000000000000000000011!4!0

Inlining a call to Asset.balanceOf in Pool-assetBalance()
Inlining a call to Asset.balanceOf in Pool-withdraw(uint256)
Inlining a call to Asset.transferFrom in Pool-withdraw(uint256)
Inlining a call to Asset.balanceOf in Pool-withdraw(uint256)
Inlining a call to Asset.balanceOf in Pool-amountToShares(uint256)
Inlining a call to Asset.balanceOf in Pool-deposit(uint256)
Inlining a call to Asset.transferFrom in Pool-deposit(uint256)
Inlining a call to Asset.balanceOf in Pool-deposit(uint256)
Inlining a call to Asset.balanceOf in Pool-sharesToAmount(uint256)
Inlining a call to Asset.transferFrom in Pool-flashLoan(address,uint256)
Inlining a call to Asset.transferFrom in Pool-flashLoan(address,uint256)
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
For CVL If command at Missing source reference information it was found that only one branch was needed
Inlining a call to TrivialReceiver.executeOperation in flashLoanIncreasesBalance
For CVL If command at Missing source reference information it was found that only one branch was needed
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
Proved that mult can't overflow, for bound 115792089237316195423570985008687907853269984665640564039457584007913129639935, removing 1 check
Proved that add can't overflow for bound 115792089237316195423570985008687907853269984665640564039457584007913129639935, removing 1 check
marking potential over-/underflowing expression class vc.data.TACExpr$Vec$Add$Binary with 'will not wrap' annotation
there already is a replacement registered in this PatchingProgram for pointer "CmdPointer(block=0_0_0_13_0_0, pos=189)", only one replacement is allowed per pointer
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
marking potential over-/underflowing expression class vc.data.TACExpr$BinOp$Sub with 'will not wrap' annotation
Artifact output.json already registered in REPORTS
Found variables used before being initialized in flashLoanIncreasesBalance. Enable info logs for DSA
dumping codeMap "PresolverRule-flashLoanIncreasesBalance" in html format, but the file name "PresolverRule-flashLoanIncreasesBalance" is lacking the `.html` suffix. Appending it and dumping that file.
Diversification did not produce statistics.
Total time for contract: 2 seconds ; Split time: 0 seconds ; Number of problems: 1 ; Solver time : 1 seconds
Verified: flashLoanIncreasesBalance
flashLoanIncreasesBalance: Properties successfully verified on all inputs
Rule flashLoanIncreasesBalance: Callee contract unresolved, callee sighash resolved, method signature is executeOperation(uint256, uint256, address)
Artifact FinalResults.html already registered in REPORTS
No violated assertion found
Artifact FinalResults.html already registered in REPORTS
