{
	"ALL": {
		"STORAGE": {
			"0xce4604a0000000000000000000000001": true
		}
	},
	"ANALYSIS": {
		"CALLGRAPH": {
			"constructor()": false,
			"0": [true, true, true],
			"ballPosition()": true,
			"pass()": true
		},
		"INIT": {
			"BallGame-pass()": true,
			"BallGame-ballPosition()": true
		},
		"MEMORY_MODEL": {
			"constructor_BallGame": false,
			"sha256": true,
			"identity": true,
			"ecrecover": true,
			"BallGame-pass()": true,
			"BallGame-ballPosition()": true
		},
		"POINTSTO": {
			"BallGame-ballPosition()": true,
			"BallGame-pass()": true,
			"constructor()": false,
			"0": [true, true, true],
			"ballPosition()": true,
			"pass()": true
		},
		"POINTSTO_MEMORY": {
			"constructor_BallGame": false,
			"ecrecover": true,
			"identity": true,
			"BallGame-ballPosition()": true,
			"sha256": true,
			"BallGame-pass()": true
		},
		"SKeyDetection": {
			"playerTwoNeverWins_instate": true,
			"playerTwoNeverWins_preserve-pass()": true
		}
	},
	"BallGame": {
		"ALIAS": [5],
		"ANNOTATION_REMOVER": [2],
		"DECOMPILER_CLEANUP": [3],
		"DSA": [31],
		"ENV_START_BLOCK": [2],
		"FREE_MEM_POINTER_SCALARIZE": [28],
		"FREE_POINTER_PROPAGATION": [7],
		"FUNCTION_BUILDER": [109],
		"INTERNAL_FUNCTION_ANNOTATED": [29],
		"INTERNAL_FUNCTION_FINDER": [9],
		"JIMPLE": [42],
		"JUMP_COND_NORMALIZATION": [10],
		"NO_RECYCLE": [8],
		"SIMPLE_HASH": [11],
		"SINGLE_SUCC_JUMP_NORMALIZATION": [1],
		"SPURIOUS_JUMP_NORMALIZATION": [2],
		"TYPE": [39],
		"UNOPTIMIZE_HASHES": [25],
		"UNREACHABLE_UNPACKING_CODE_FINDER": [4],
		"XOR_SIMPLE": [11],
		"blocks": [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 15, 15, 15, 15],
		"commands": [305, 305, 305, 306, 312, 337, 502, 502, 502, 502, 208, 114, 114, 114, 114]
	},
	"BallGame-ballPosition()": {
		"ADDED_MISSING_FREE_PTR_WRITE": [4],
		"BASIC_ARITH_SIMPLIFY_CONST_SUB_THEN_ADD": [4],
		"BASIC_ARITH_SIMPLIFY_POINTER_SIMPLE": [33],
		"CALLGRAPHBUILDER": [1],
		"CALLGRAPH_FULL": [20],
		"COLLAPSE_EMPTY_DSA": [1],
		"CONSTANT_FOLDING": [9],
		"CONTRACT_LINKING": [3],
		"COPY_LOOP_SUMMARIZATION": [17],
		"DEOPTIMIZE_MULTI_STRUCTS": [4],
		"EARLY_SUMMARIZATION": [10],
		"EQUALITY_CHECK_NORMALIZATION": [3],
		"FIXED_BOOL_COMPARISON": [3],
		"FIXED_FREE_PTR_READ": [5],
		"FUNCTION_ANNOTATIONS_REMOVAL": [2],
		"HASH_OPTIMIZE": [1],
		"HOIST_LOOPS": [0],
		"INITIALIZATION": [70],
		"INLINED": [2],
		"INSTRUMENT_RETURN_BUFFERS": [4],
		"LOOP_SUMMARY_INSTRUMENTATION": [27],
		"MAP_GETTER_SUMMARIZATION": [13],
		"MEMORY_MODEL": [39],
		"MEMORY_OPTIMIZE": [40],
		"MEMORY_SPLITTER": [7, 3],
		"MEMORY_SPLITTER_AND_BRANCH_PRUNER": [108],
		"MERGED": [0, 0],
		"MERGED_TAC_OPTIMIZATIONS": [0],
		"NORMALIZE_STORAGE_PACKING": [12],
		"NORMALIZE_TRY_CATCH": [6],
		"OBJECT_REORDERING_FENCE": [1],
		"OPAQUE_IDENTITY_REMOVAL": [1],
		"OPTIMIZE_REVERT_STRINGS": [1],
		"OPTIMIZE_STORAGE_READS": [3],
		"PARTITION_MEMORY": [4],
		"PATH_OPTIMIZE_AFTER_PTA": [4],
		"PATH_OPTIMIZE_TAC_OPTIMIZATIONS": [1],
		"PLUS_NEG_31_SIMPLIFY": [2],
		"POINTSTO": [88, 19],
		"POINTSTO_MEMORY": [25],
		"REMOVE_UNREACHABLE": [0],
		"REMOVE_UNREACHABLE_POST_PTA": [3],
		"REORDER_OBJECT_INITIALIZATION": [1],
		"RETSIZE_SIMPLIFY": [2],
		"RETURN_SYMBOL_OPTIMIZE1": [3],
		"RETURN_SYMBOL_OPTIMIZE2": [2],
		"REWRITE_ALLOCATIONS": [17],
		"SCRATCH_COPY_NORMALIZATION": [2],
		"SHIFT_FREE_POINTER_OPS": [6],
		"SIMPLIFIED": [4],
		"STORAGE_ADDRESS_RESOLUTION": [1],
		"STORAGE_COPY_LOOP_SUMMARIZATION": [64],
		"SUMMARIZE_STORAGE_LENGTH": [26],
		"TERNARY_OPTIMIZE": [6],
		"TRIVIAL_SUBTRACT_SIMPLIFY": [4],
		"UNROLL": [4],
		"UNROLL_PRE_CLEANUP": [3],
		"UNROLL_REMOVE_UNREACHABLE": [1],
		"UNUSED_ASSIGNMENTS": [4],
		"USE_LATEST_FREEMEM": [2],
		"blocks": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2],
		"commands": [53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 51, 51, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 50, 51, 51, 51, 51, 51, 52, 56, 56, 56, 56, 48, 42, 43, 44, 42, 43, 44, 42, 43, 44]
	},
	"BallGame-fallback": {
		"blocks": [6, 6],
		"commands": [40, 40]
	},
	"BallGame-pass()": {
		"ADDED_MISSING_FREE_PTR_WRITE": [3],
		"BASIC_ARITH_SIMPLIFY_CONST_SUB_THEN_ADD": [5],
		"BASIC_ARITH_SIMPLIFY_POINTER_SIMPLE": [33],
		"CALLGRAPHBUILDER": [2],
		"CALLGRAPH_FULL": [23],
		"COLLAPSE_EMPTY_DSA": [1],
		"CONSTANT_FOLDING": [9],
		"CONTRACT_LINKING": [3],
		"COPY_LOOP_SUMMARIZATION": [24],
		"DEOPTIMIZE_MULTI_STRUCTS": [2],
		"EARLY_SUMMARIZATION": [12],
		"EQUALITY_CHECK_NORMALIZATION": [6],
		"FIXED_BOOL_COMPARISON": [4],
		"FIXED_FREE_PTR_READ": [5],
		"FUNCTION_ANNOTATIONS_REMOVAL": [0],
		"HASH_OPTIMIZE": [1],
		"HOIST_LOOPS": [2],
		"INITIALIZATION": [70],
		"INLINED": [1],
		"INSTRUMENT_RETURN_BUFFERS": [3],
		"LOOP_SUMMARY_INSTRUMENTATION": [23],
		"MAP_GETTER_SUMMARIZATION": [15],
		"MEMORY_MODEL": [37],
		"MEMORY_OPTIMIZE": [41],
		"MEMORY_SPLITTER": [7, 5],
		"MEMORY_SPLITTER_AND_BRANCH_PRUNER": [103],
		"MERGED": [0, 0],
		"MERGED_TAC_OPTIMIZATIONS": [0],
		"NORMALIZE_STORAGE_PACKING": [14],
		"NORMALIZE_TRY_CATCH": [6],
		"OBJECT_REORDERING_FENCE": [1],
		"OPAQUE_IDENTITY_REMOVAL": [1],
		"OPTIMIZE_REVERT_STRINGS": [1],
		"OPTIMIZE_STORAGE_READS": [3],
		"PARTITION_MEMORY": [4],
		"PATH_OPTIMIZE_AFTER_PTA": [2],
		"PATH_OPTIMIZE_TAC_OPTIMIZATIONS": [1],
		"PLUS_NEG_31_SIMPLIFY": [3],
		"POINTSTO": [86, 21],
		"POINTSTO_MEMORY": [30],
		"REMOVE_UNREACHABLE": [0],
		"REMOVE_UNREACHABLE_POST_PTA": [3],
		"REORDER_OBJECT_INITIALIZATION": [1],
		"RETSIZE_SIMPLIFY": [0],
		"RETURN_SYMBOL_OPTIMIZE1": [1],
		"RETURN_SYMBOL_OPTIMIZE2": [1],
		"REWRITE_ALLOCATIONS": [16],
		"SCRATCH_COPY_NORMALIZATION": [2],
		"SHIFT_FREE_POINTER_OPS": [6],
		"SIMPLIFIED": [2],
		"STORAGE_ADDRESS_RESOLUTION": [0],
		"STORAGE_COPY_LOOP_SUMMARIZATION": [18],
		"SUMMARIZE_STORAGE_LENGTH": [27],
		"TERNARY_OPTIMIZE": [2],
		"TRIVIAL_SUBTRACT_SIMPLIFY": [2],
		"UNROLL": [4],
		"UNROLL_PRE_CLEANUP": [4],
		"UNROLL_REMOVE_UNREACHABLE": [0],
		"UNUSED_ASSIGNMENTS": [1],
		"USE_LATEST_FREEMEM": [1],
		"blocks": [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8],
		"commands": [78, 78, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 67, 67, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 60, 68, 68, 68, 68, 68, 62, 63, 64, 66]
	},
	"INSTRUMENTATION": {
		"MEMORY_PARTITION": {
			"0": [true, true, true],
			"constructor()": false,
			"ballPosition()": true,
			"pass()": true
		}
	},
	"NameObject(baseName=playerTwoNeverWins_instate, contractNames=[BallGame, ecrecover, sha256, ripemd160, identity, bigmod, bn256Add, bn256ScalarMul, bn256Pairing, Precompiled244, Precompiled245, Precompiled246, Precompiled247, Precompiled248, Precompiled249, Precompiled250, Precompiled251, Precompiled252, Precompiled253, Precompiled254], ruleType=Initialization(originalInv=CVLInvariant(cvlRange=BallGame.spec:7:1, id=playerTwoNeverWins, ruleType=spec.cvlast.SpecType$Single$FromUser$SpecFile@5436ad87, params=[], exp=ballPosition() != 2, methodParamFilters=MethodParamFilters(cvlRange=unknownLocation, scope=(Spec file -> Invariant playerTwoNeverWins), methodParamToFilter={}), proof=CVLInvariantProof(preserved=[]), scope=(Spec file -> Invariant playerTwoNeverWins), scopeId=0)))_solving_summary": {
		"#splits": 1,
		"split+solve time": {
			"SMT solving (ms)": 82
		}
	},
	"NameObject(baseName=playerTwoNeverWins_preserve-pass(), contractNames=[BallGame, ecrecover, sha256, ripemd160, identity, bigmod, bn256Add, bn256ScalarMul, bn256Pairing, Precompiled244, Precompiled245, Precompiled246, Precompiled247, Precompiled248, Precompiled249, Precompiled250, Precompiled251, Precompiled252, Precompiled253, Precompiled254], ruleType=Preservation(originalInv=CVLInvariant(cvlRange=BallGame.spec:7:1, id=playerTwoNeverWins, ruleType=spec.cvlast.SpecType$Single$FromUser$SpecFile@5436ad87, params=[], exp=ballPosition() != 2, methodParamFilters=MethodParamFilters(cvlRange=unknownLocation, scope=(Spec file -> Invariant playerTwoNeverWins), methodParamToFilter={}), proof=CVLInvariantProof(preserved=[]), scope=(Spec file -> Invariant playerTwoNeverWins), scopeId=0)))_solving_summary": {
		"#splits": 1,
		"split+solve time": {
			"SMT solving (ms)": 315
		}
	},
	"Precompiled244": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled245": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled246": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled247": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled248": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled249": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled250": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled251": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled252": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled253": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"Precompiled254": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"SMT": {
		"VCSpace": [{
    "version": "0.1.3",
    "name": {
        "baseName": "playerTwoNeverWins_instate",
        "contractNames": [
            "BallGame",
            "ecrecover",
            "sha256",
            "ripemd160",
            "identity",
            "bigmod",
            "bn256Add",
            "bn256ScalarMul",
            "bn256Pairing",
            "Precompiled244",
            "Precompiled245",
            "Precompiled246",
            "Precompiled247",
            "Precompiled248",
            "Precompiled249",
            "Precompiled250",
            "Precompiled251",
            "Precompiled252",
            "Precompiled253",
            "Precompiled254"
        ],
        "ruleType": "Initialization(originalInv=CVLInvariant(cvlRange=BallGame.spec:7:1, id=playerTwoNeverWins, ruleType=spec.cvlast.SpecType$Single$FromUser$SpecFile@5436ad87, params=[], exp=ballPosition() != 2, methodParamFilters=MethodParamFilters(cvlRange=unknownLocation, scope=(Spec file -> Invariant playerTwoNeverWins), methodParamToFilter={}), proof=CVLInvariantProof(preserved=[]), scope=(Spec file -> Invariant playerTwoNeverWins), scopeId=0))"
    },
    "totalSmtSolvingTime": "PT0.082S",
    "totalVcGenerationTime": "PT0S",
    "totalPrettifyModelTime": "PT0S",
    "totalSplits": 1,
    "splits": [
        {
            "address": [
            ],
            "splitName": "playerTwoNeverWins_instate",
            "finalResult": "UNSAT",
            "timeout": "PT5S",
            "smtSolvingWallTime": "PT0.230400189S",
            "vcGenerationTime": "PT0.117459148S",
            "vcFeatures": [
            ],
            "solvingEvent": {
                "type": "RaceList",
                "races": [
                    {
                        "timeout": "PT5S",
                        "raceDescription": "LIA_only_race",
                        "solvingTime": "PT0.081677769S",
                        "singleResults": [
                            {
                                "satResult": "UNSAT",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_lia2",
                                "solverName": "z3",
                                "arguments": "-in tactic.solve_eqs.max_occs=4 smt.arith.solver=2 smt.auto_config=false -t:5000",
                                "solvingTime": "PT0.069S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "LostRace",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_lia1",
                                "solverName": "z3",
                                "arguments": "-in smt.arith.solver=2 smt.auto_config=false -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_eq2",
                                "solverName": "z3",
                                "arguments": "-in tactic.solve_eqs.max_occs=4 tactic.solve_eqs.context_solve=true -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_eq1",
                                "solverName": "z3",
                                "arguments": "-in tactic.solve_eqs.max_occs=4 -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc4_def",
                                "solverName": "cvc4",
                                "arguments": "--lang smt2 --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_arith2",
                                "solverName": "z3",
                                "arguments": "-in smt.arith.solver=6 smt.auto_config=false tactic.solve_eqs.max_occs=4 -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc5_lin",
                                "solverName": "cvc5",
                                "arguments": "--lang smt2 --dag-thresh=0 --decision=justification --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_arith1",
                                "solverName": "z3",
                                "arguments": "-in smt.arith.solver=6 smt.auto_config=false -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_def",
                                "solverName": "z3",
                                "arguments": "-in -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc5_linNoDio",
                                "solverName": "cvc5",
                                "arguments": "--lang smt2 --dag-thresh=0 --decision=justification --no-dio-solver --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc4_lin",
                                "solverName": "cvc4",
                                "arguments": "--lang smt2 --decision=justification --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc5_def",
                                "solverName": "cvc5",
                                "arguments": "--lang smt2 --dag-thresh=0 --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.038S",
                                "vcGenerationTime": "PT0.046S",
                                "learnedClauseOutputNum": 0
                            }
                        ]
                    }
                ],
                "numUsableLearnedClausesOutput": 0,
                "numAllLearnedClausesOutput": 0
            }
        }
    ]
}, {
    "version": "0.1.3",
    "name": {
        "baseName": "playerTwoNeverWins_preserve-pass()",
        "contractNames": [
            "BallGame",
            "ecrecover",
            "sha256",
            "ripemd160",
            "identity",
            "bigmod",
            "bn256Add",
            "bn256ScalarMul",
            "bn256Pairing",
            "Precompiled244",
            "Precompiled245",
            "Precompiled246",
            "Precompiled247",
            "Precompiled248",
            "Precompiled249",
            "Precompiled250",
            "Precompiled251",
            "Precompiled252",
            "Precompiled253",
            "Precompiled254"
        ],
        "ruleType": "Preservation(originalInv=CVLInvariant(cvlRange=BallGame.spec:7:1, id=playerTwoNeverWins, ruleType=spec.cvlast.SpecType$Single$FromUser$SpecFile@5436ad87, params=[], exp=ballPosition() != 2, methodParamFilters=MethodParamFilters(cvlRange=unknownLocation, scope=(Spec file -> Invariant playerTwoNeverWins), methodParamToFilter={}), proof=CVLInvariantProof(preserved=[]), scope=(Spec file -> Invariant playerTwoNeverWins), scopeId=0))"
    },
    "totalSmtSolvingTime": "PT0.315S",
    "totalVcGenerationTime": "PT0S",
    "totalPrettifyModelTime": "PT0S",
    "totalSplits": 1,
    "splits": [
        {
            "address": [
            ],
            "splitName": "playerTwoNeverWins_preserve-pass()",
            "finalResult": "SAT",
            "timeout": "PT5S",
            "smtSolvingWallTime": "PT0.559271944S",
            "vcGenerationTime": "PT0.072472641S",
            "vcFeatures": [
            ],
            "solvingEvent": {
                "type": "RaceList",
                "races": [
                    {
                        "timeout": "PT5S",
                        "raceDescription": "LIA_only_race",
                        "solvingTime": "PT0.314932443S",
                        "singleResults": [
                            {
                                "satResult": "SAT",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_lia2",
                                "solverName": "z3",
                                "arguments": "-in tactic.solve_eqs.max_occs=4 smt.arith.solver=2 smt.auto_config=false -t:5000",
                                "solvingTime": "PT0.280S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "LostRace",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_lia1",
                                "solverName": "z3",
                                "arguments": "-in smt.arith.solver=2 smt.auto_config=false -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_eq2",
                                "solverName": "z3",
                                "arguments": "-in tactic.solve_eqs.max_occs=4 tactic.solve_eqs.context_solve=true -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_eq1",
                                "solverName": "z3",
                                "arguments": "-in tactic.solve_eqs.max_occs=4 -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc4_def",
                                "solverName": "cvc4",
                                "arguments": "--lang smt2 --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_arith2",
                                "solverName": "z3",
                                "arguments": "-in smt.arith.solver=6 smt.auto_config=false tactic.solve_eqs.max_occs=4 -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc5_lin",
                                "solverName": "cvc5",
                                "arguments": "--lang smt2 --dag-thresh=0 --decision=justification --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_arith1",
                                "solverName": "z3",
                                "arguments": "-in smt.arith.solver=6 smt.auto_config=false -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "z3_def",
                                "solverName": "z3",
                                "arguments": "-in -t:5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc5_linNoDio",
                                "solverName": "cvc5",
                                "arguments": "--lang smt2 --dag-thresh=0 --decision=justification --no-dio-solver --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc4_lin",
                                "solverName": "cvc4",
                                "arguments": "--lang smt2 --decision=justification --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            },
                            {
                                "satResult": "SkippedDelayed",
                                "logic": "QF_UFDTLIA",
                                "solverConfigurationName": "cvc5_def",
                                "solverName": "cvc5",
                                "arguments": "--lang smt2 --dag-thresh=0 --incremental --tlimit-per=5000",
                                "solvingTime": "PT0S",
                                "smtGenerationTime": "PT0.033S",
                                "vcGenerationTime": "PT0.054S",
                                "learnedClauseOutputNum": 0
                            }
                        ]
                    }
                ],
                "numUsableLearnedClausesOutput": 0,
                "numAllLearnedClausesOutput": 0
            }
        }
    ]
}]
	},
	"TIMES": {
		"DECOMPILER_CLEANUP": 3,
		"FREE_POINTER_PROPAGATION": 8,
		"FREE_MEM_POINTER_SCALARIZE": 30,
		"INTERNAL_FUNCTION_ANNOTATED": 30,
		"ENV_START_BLOCK": 2,
		"NO_RECYCLE": 9,
		"TYPE": 44,
		"XOR_SIMPLE": 12,
		"SIMPLE_HASH": 27,
		"UNOPTIMIZE_HASHES": 27,
		"INTERNAL_FUNCTION_FINDER": 11,
		"ANNOTATION_REMOVER": 3,
		"DSA": 76,
		"UNREACHABLE_UNPACKING_CODE_FINDER": 4,
		"JUMP_COND_NORMALIZATION": 10,
		"SPURIOUS_JUMP_NORMALIZATION": 2,
		"SINGLE_SUCC_JUMP_NORMALIZATION": 1,
		"ALIAS": 5,
		"INSTRUMENT_IMMUTABLES": 1,
		"NONE": 6,
		"EARLY_SUMMARIZATION": 22,
		"DEOPTIMIZE_MULTI_STRUCTS": 6,
		"OBJECT_REORDERING_FENCE": 2,
		"REORDER_OBJECT_INITIALIZATION": 2,
		"NORMALIZE_STORAGE_PACKING": 26,
		"SIMPLIFIED": 6,
		"MAP_GETTER_SUMMARIZATION": 28,
		"RETSIZE_SIMPLIFY": 2,
		"PLUS_NEG_31_SIMPLIFY": 5,
		"INSTRUMENT_RETURN_BUFFERS": 7,
		"CONSTANT_FOLDING": 18,
		"TRIVIAL_SUBTRACT_SIMPLIFY": 6,
		"BASIC_ARITH_SIMPLIFY_CONST_SUB_THEN_ADD": 9,
		"ADDED_MISSING_FREE_PTR_WRITE": 7,
		"LOOP_SUMMARY_INSTRUMENTATION": 50,
		"FIXED_BOOL_COMPARISON": 7,
		"HOIST_LOOPS": 2,
		"USE_LATEST_FREEMEM": 3,
		"EQUALITY_CHECK_NORMALIZATION": 9,
		"BASIC_ARITH_SIMPLIFY_POINTER_SIMPLE": 66,
		"FIXED_FREE_PTR_READ": 10,
		"SHIFT_FREE_POINTER_OPS": 12,
		"MERGED": 0,
		"SUMMARIZE_STORAGE_LENGTH": 53,
		"OPTIMIZE_STORAGE_READS": 6,
		"COLLAPSE_EMPTY_DSA": 2,
		"REWRITE_ALLOCATIONS": 33,
		"NORMALIZE_TRY_CATCH": 12,
		"OPTIMIZE_REVERT_STRINGS": 2,
		"SCRATCH_COPY_NORMALIZATION": 4,
		"INITIALIZATION": 140,
		"COPY_LOOP_SUMMARIZATION": 41,
		"FUNCTION_ANNOTATIONS_REMOVAL": 2,
		"OPAQUE_IDENTITY_REMOVAL": 2,
		"POINTSTO": 238,
		"REMOVE_UNREACHABLE_POST_PTA": 6,
		"MEMORY_SPLITTER": 22,
		"PATH_OPTIMIZE_AFTER_PTA": 6,
		"MEMORY_SPLITTER_AND_BRANCH_PRUNER": 211,
		"CONTRACT_LINKING": 18,
		"POINTSTO_MEMORY": 112,
		"MEMORY_MODEL": 182,
		"MEMORY_OPTIMIZE": 201,
		"RETURN_SYMBOL_OPTIMIZE1": 8,
		"HASH_OPTIMIZE": 6,
		"CALLED_CONTRACT": 2,
		"CALLGRAPH_FULL": 73,
		"CALLGRAPHBUILDER": 3,
		"RETURN_SYMBOL_OPTIMIZE2": 5,
		"PARTITION_MEMORY": 16,
		"STORAGE_COPY_LOOP_SUMMARIZATION": 299,
		"STORAGE_ADDRESS_RESOLUTION": 1,
		"INLINED": 4,
		"UNROLL_PRE_CLEANUP": 22,
		"UNROLL_REMOVE_UNREACHABLE": 5,
		"UNROLL": 27,
		"TERNARY_OPTIMIZE": 27,
		"MERGED_TAC_OPTIMIZATIONS": 0,
		"PATH_OPTIMIZE_TAC_OPTIMIZATIONS": 6,
		"REMOVE_UNREACHABLE": 0,
		"UNUSED_ASSIGNMENTS": 6,
		"RULE_COMPILE": 180,
		"EXTCODECOPY_HANDLE": 18,
		"PATH_OPTIMIZE0": 24,
		"APPLIED_SUMMARIES": 61,
		"OPAQUE_IDENTITY_REMOVAL_2": 3,
		"INLINED_HOOKS": 18,
		"GHOST_ANNOTATION": 18,
		"MATERIALIZE_DISJOINT_HASHES": 3,
		"OPTIMIZE_PROPAGATE_CONSTANTS1": 125,
		"REMOVE_UNUSED_WRITES": 21,
		"OPTIMIZE": 35,
		"PATH_OPTIMIZE1": 14,
		"OPTIMIZE_INFEASIBLE_PATHS": 2751,
		"OPTIMIZE_OVERFLOW": 26,
		"OPTIMIZE_BITWISE_CLEANING": 411,
		"OPTIMIZE_TRIANGLES": 14,
		"OPTIMIZE_VALUE_RANGE": 12,
		"OPTIMIZE_PROPAGATE_CONSTANTS2": 35,
		"PATH_OPTIMIZE2": 9,
		"OPTIMIZE_MERGE_BLOCKS": 1,
		"QUANTIFIER_POLARITY": 13,
		"SIMPLE_SUMMARIES": 1,
		"SIMPLE_SIMPLE": 33,
		"INIT_VARS": 10,
		"FOLD_SPLIT_STORES": 14,
		"REMOVE_UNUSED": 37,
		"SINK_OPTIMIZER": 9,
		"DSA_TO_SSA": 9,
		"INSERT_MAP_DEFINITION": 15,
		"HEURISTICAL_FOLDING": 146,
		"DROP_BW_NOPS": 13,
		"SKeyDetection": 51
	},
	"available_solvers": "z3_lia1, z3_lia2, z3_def, yices_def, z3_eq1, z3_eq2, cvc4_nonlin, cvc5_lin, cvc4_lin, cvc5_nonlin, cvc5_linNoDio, z3_arith2, z3_arith1, cvc5_def, cvc4_def, cvc5_q, cvc5_nonlinNoDio, cvc5_bv, cvc4_q, bitwuzla_def",
	"bigmod": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"bn256Add": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"bn256Pairing": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"bn256ScalarMul": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"constructor_BallGame": {
		"ANNOTATION_REMOVER": [1],
		"CALLED_CONTRACT": [2],
		"CALLGRAPH_FULL": [5],
		"CONTRACT_LINKING": [4],
		"DECOMPILER_CLEANUP": [0],
		"DSA": [7],
		"ENV_START_BLOCK": [0],
		"FREE_MEM_POINTER_SCALARIZE": [2],
		"FREE_POINTER_PROPAGATION": [1],
		"HASH_OPTIMIZE": [3],
		"INLINED": [1],
		"INSTRUMENT_IMMUTABLES": [1],
		"INTERNAL_FUNCTION_ANNOTATED": [1],
		"INTERNAL_FUNCTION_FINDER": [2],
		"JIMPLE": [4],
		"MEMORY_MODEL": [1],
		"MEMORY_OPTIMIZE": [4],
		"MERGED": [0],
		"MERGED_TAC_OPTIMIZATIONS": [0],
		"NONE": [6],
		"NO_RECYCLE": [1],
		"PARTITION_MEMORY": [2],
		"PATH_OPTIMIZE_TAC_OPTIMIZATIONS": [1],
		"POINTSTO": [0],
		"POINTSTO_MEMORY": [1],
		"REMOVE_UNREACHABLE": [0],
		"RETURN_SYMBOL_OPTIMIZE1": [3],
		"RETURN_SYMBOL_OPTIMIZE2": [1],
		"SIMPLE_HASH": [2],
		"STORAGE_ADDRESS_RESOLUTION": [0],
		"STORAGE_COPY_LOOP_SUMMARIZATION": [12],
		"TERNARY_OPTIMIZE": [1],
		"TYPE": [5],
		"UNOPTIMIZE_HASHES": [2],
		"UNROLL": [4],
		"UNROLL_PRE_CLEANUP": [3],
		"UNROLL_REMOVE_UNREACHABLE": [1],
		"UNUSED_ASSIGNMENTS": [1],
		"XOR_SIMPLE": [1],
		"blocks": [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2],
		"commands": [54, 54, 54, 55, 61, 65, 99, 99, 99, 99, 54, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 35, 35, 35, 35, 35, 33, 27, 28, 29]
	},
	"ecrecover": {
		"CALLGRAPHBUILDER": [0],
		"CALLGRAPH_FULL": [9],
		"CONTRACT_LINKING": [3],
		"HASH_OPTIMIZE": [0],
		"INLINED": [0],
		"MEMORY_MODEL": [35],
		"MEMORY_OPTIMIZE": [40],
		"MERGED": [0],
		"MERGED_TAC_OPTIMIZATIONS": [0],
		"PARTITION_MEMORY": [2],
		"PATH_OPTIMIZE_TAC_OPTIMIZATIONS": [1],
		"POINTSTO": [9],
		"POINTSTO_MEMORY": [15],
		"REMOVE_UNREACHABLE": [0],
		"RETURN_SYMBOL_OPTIMIZE1": [0],
		"RETURN_SYMBOL_OPTIMIZE2": [1],
		"STORAGE_ADDRESS_RESOLUTION": [0],
		"STORAGE_COPY_LOOP_SUMMARIZATION": [65],
		"TERNARY_OPTIMIZE": [0],
		"UNROLL": [5],
		"UNROLL_PRE_CLEANUP": [4],
		"UNROLL_REMOVE_UNREACHABLE": [1],
		"UNUSED_ASSIGNMENTS": [0],
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
	},
	"identity": {
		"CALLGRAPHBUILDER": [0],
		"CALLGRAPH_FULL": [7],
		"CONTRACT_LINKING": [2],
		"HASH_OPTIMIZE": [0],
		"INLINED": [0],
		"MEMORY_MODEL": [35],
		"MEMORY_OPTIMIZE": [38],
		"MERGED": [0],
		"MERGED_TAC_OPTIMIZATIONS": [0],
		"PARTITION_MEMORY": [2],
		"PATH_OPTIMIZE_TAC_OPTIMIZATIONS": [1],
		"POINTSTO": [6],
		"POINTSTO_MEMORY": [16],
		"REMOVE_UNREACHABLE": [0],
		"RETURN_SYMBOL_OPTIMIZE1": [1],
		"RETURN_SYMBOL_OPTIMIZE2": [0],
		"STORAGE_ADDRESS_RESOLUTION": [0],
		"STORAGE_COPY_LOOP_SUMMARIZATION": [70],
		"TERNARY_OPTIMIZE": [0],
		"UNROLL": [5],
		"UNROLL_PRE_CLEANUP": [4],
		"UNROLL_REMOVE_UNREACHABLE": [1],
		"UNUSED_ASSIGNMENTS": [0],
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"playerTwoNeverWins_instate": {
		"APPLIED_SUMMARIES": [22, 6],
		"DROP_BW_NOPS": [9],
		"DSA": [18],
		"DSA_TO_SSA": [5],
		"EXTCODECOPY_HANDLE": [9],
		"FOLD_SPLIT_STORES": [8],
		"GHOST_ANNOTATION": [10],
		"Generating VC (ms)": [110],
		"HEURISTICAL_FOLDING": [70],
		"INIT_VARS": [6],
		"INLINED_HOOKS": [7, 3],
		"INSERT_MAP_DEFINITION": [4, 3],
		"LIA_only_race[timeout=5s]": {
			"SkippedDelayed": ["cvc5_def, [0ms]", "cvc4_lin, [0ms]", "cvc5_linNoDio, [0ms]", "z3_def, [0ms]", "z3_arith1, [0ms]", "cvc5_lin, [0ms]", "z3_arith2, [0ms]", "cvc4_def, [0ms]", "z3_eq1, [0ms]", "z3_eq2, [0ms]"],
			"LostRace": "z3_lia1, z3 -in smt.arith.solver=2 smt.auto_config=false -t:5000[77ms]",
			"UNSAT": "z3_lia2, z3 -in tactic.solve_eqs.max_occs=4 smt.arith.solver=2 smt.auto_config=false -t:5000[77ms]"
		},
		"MATERIALIZE_DISJOINT_HASHES": [3],
		"OPAQUE_IDENTITY_REMOVAL_2": [1],
		"OPTIMIZE": [20],
		"OPTIMIZE_BITWISE_CLEANING": [248],
		"OPTIMIZE_INFEASIBLE_PATHS": [1260],
		"OPTIMIZE_MERGE_BLOCKS": [1],
		"OPTIMIZE_OVERFLOW": [15],
		"OPTIMIZE_PROPAGATE_CONSTANTS1": [70],
		"OPTIMIZE_PROPAGATE_CONSTANTS2": [14],
		"OPTIMIZE_TRIANGLES": [4],
		"OPTIMIZE_VALUE_RANGE": [4],
		"PATH_OPTIMIZE0": [9],
		"PATH_OPTIMIZE1": [4],
		"PATH_OPTIMIZE2": [3],
		"QUANTIFIER_POLARITY": [7],
		"REMOVE_UNUSED": [22],
		"REMOVE_UNUSED_WRITES": [13],
		"RULE_COMPILE": [85],
		"SIMPLE_HASH": [7],
		"SIMPLE_SIMPLE": [7, 16],
		"SIMPLE_SUMMARIES": [0],
		"SINK_OPTIMIZER": [3],
		"SKeyDetection": [31],
		"SMT solving (ms)": [82],
		"Splitting (ms)": [3],
		"StorageHashAxiomGeneratorDataTypes": {
			
		},
		"TERNARY_OPTIMIZE": [7],
		"blocks": [25, 25, 25, 25, 25, 25, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 3, 2, 1, 5],
		"commands": [685, 685, 685, 685, 685, 682, 680, 680, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 617, 627, 627, 627, 627, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433, 433]
	},
	"playerTwoNeverWins_preserve": {
		"RULE_COMPILE": [95]
	},
	"playerTwoNeverWins_preserve-pass()": {
		"APPLIED_SUMMARIES": [28, 5],
		"DROP_BW_NOPS": [4],
		"DSA": [20],
		"DSA_TO_SSA": [4],
		"EXTCODECOPY_HANDLE": [9],
		"FOLD_SPLIT_STORES": [6],
		"GHOST_ANNOTATION": [8],
		"Generating VC (ms)": [113],
		"HEURISTICAL_FOLDING": [76],
		"INIT_VARS": [4],
		"INLINED_HOOKS": [8, 0],
		"INSERT_MAP_DEFINITION": [4, 4],
		"LIA_only_race[timeout=5s]": {
			"SkippedDelayed": ["cvc5_def, [0ms]", "cvc4_lin, [0ms]", "cvc5_linNoDio, [0ms]", "z3_def, [0ms]", "z3_arith1, [0ms]", "cvc5_lin, [0ms]", "z3_arith2, [0ms]", "cvc4_def, [0ms]", "z3_eq1, [0ms]", "z3_eq2, [0ms]"],
			"LostRace": "z3_lia1, z3 -in smt.arith.solver=2 smt.auto_config=false -t:5000[0ms]",
			"SAT": "z3_lia2, z3 -in tactic.solve_eqs.max_occs=4 smt.arith.solver=2 smt.auto_config=false -t:5000[311ms]"
		},
		"MATERIALIZE_DISJOINT_HASHES": [0],
		"OPAQUE_IDENTITY_REMOVAL_2": [2],
		"OPTIMIZE": [15],
		"OPTIMIZE_BITWISE_CLEANING": [163],
		"OPTIMIZE_INFEASIBLE_PATHS": [1491],
		"OPTIMIZE_MERGE_BLOCKS": [0],
		"OPTIMIZE_OVERFLOW": [11],
		"OPTIMIZE_PROPAGATE_CONSTANTS1": [55],
		"OPTIMIZE_PROPAGATE_CONSTANTS2": [21],
		"OPTIMIZE_TRIANGLES": [10],
		"OPTIMIZE_VALUE_RANGE": [8],
		"PATH_OPTIMIZE0": [15],
		"PATH_OPTIMIZE1": [10],
		"PATH_OPTIMIZE2": [6],
		"QUANTIFIER_POLARITY": [6],
		"REMOVE_UNUSED": [15],
		"REMOVE_UNUSED_WRITES": [8],
		"SIMPLE_HASH": [7],
		"SIMPLE_SIMPLE": [5, 5],
		"SIMPLE_SUMMARIES": [1],
		"SINK_OPTIMIZER": [6],
		"SKeyDetection": [20],
		"SMT solving (ms)": [315],
		"Splitting (ms)": [0],
		"StorageHashAxiomGeneratorDataTypes": {
			
		},
		"TERNARY_OPTIMIZE": [11],
		"blocks": [30, 40, 40, 40, 40, 40, 40, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 17, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 12, 11, 10, 9, 8, 7, 13],
		"commands": [723, 791, 791, 791, 791, 791, 787, 783, 783, 728, 728, 728, 728, 728, 728, 728, 728, 728, 728, 728, 728, 683, 694, 694, 694, 694, 502, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 498, 497, 496, 498],
		"prettifyModel (ms)": [107]
	},
	"ripemd160": {
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
	},
	"run_id": {
		"CVL": {
			"328f1db1": "certora/specs/BallGame.spec"
		},
		"end_timestamp": ["07/11/2023 16:10:27"],
		"start_timestamp": ["07/11/2023 16:10:21"],
		"start_to_end_time": [6410]
	},
	"sha256": {
		"CALLGRAPHBUILDER": [0],
		"CALLGRAPH_FULL": [9],
		"CONTRACT_LINKING": [3],
		"HASH_OPTIMIZE": [1],
		"INLINED": [0],
		"MEMORY_MODEL": [35],
		"MEMORY_OPTIMIZE": [38],
		"MERGED": [0],
		"MERGED_TAC_OPTIMIZATIONS": [0],
		"PARTITION_MEMORY": [2],
		"PATH_OPTIMIZE_TAC_OPTIMIZATIONS": [1],
		"POINTSTO": [9],
		"POINTSTO_MEMORY": [25],
		"REMOVE_UNREACHABLE": [0],
		"RETURN_SYMBOL_OPTIMIZE1": [0],
		"RETURN_SYMBOL_OPTIMIZE2": [0],
		"STORAGE_ADDRESS_RESOLUTION": [0],
		"STORAGE_COPY_LOOP_SUMMARIZATION": [70],
		"TERNARY_OPTIMIZE": [0],
		"UNROLL": [5],
		"UNROLL_PRE_CLEANUP": [4],
		"UNROLL_REMOVE_UNREACHABLE": [1],
		"UNUSED_ASSIGNMENTS": [0],
		"blocks": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"commands": [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
	},
	"used_solvers": "z3_lia1, z3_lia2, z3_def, z3_eq1, z3_eq2, cvc4_nonlin, cvc5_lin, cvc4_lin, cvc5_nonlin, cvc5_linNoDio, z3_arith2, z3_arith1, cvc5_def, cvc4_def, cvc5_q, cvc5_nonlinNoDio, cvc5_bv, cvc4_q"
}